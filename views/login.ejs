<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <title>Login | SkillLink</title>
</head>

<style>
    @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap');

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Montserrat', sans-serif;
    }

    body {
        background-color: #c9d6ff;
        background: linear-gradient(to right, #e2e2e2, #c9d6ff);
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        height: 100vh;
    }

    .container {
        background-color: #fff;
        border-radius: 30px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.35);
        position: relative;
        overflow: hidden;
        width: 768px;
        max-width: 100%;
        min-height: 480px;
    }

    .container p {
        font-size: 14px;
        line-height: 20px;
        letter-spacing: 0.3px;
        margin: 20px 0;
    }

    .container span {
        font-size: 12px;
    }

    .container a {
        color: #333;
        font-size: 13px;
        text-decoration: none;
        margin: 15px 0 10px;
    }

    .container button {
        background-color: #512da8;
        color: #fff;
        font-size: 12px;
        padding: 10px 45px;
        border: 1px solid transparent;
        border-radius: 8px;
        font-weight: 600;
        letter-spacing: 0.5px;
        text-transform: uppercase;
        margin-top: 10px;
        cursor: pointer;
        width: 100%;
    }

    .container button.hidden {
        background-color: transparent;
        border-color: #fff;
    }

    .container form {
        background-color: #fff;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        padding: 0 40px;
        height: 100%;
    }

    .input-box {
        position: relative;
        width: 100%;
        margin: 8px 0;
    }

    .input-box input {
        background-color: #eee;
        border: none;
        padding: 10px 15px 10px 40px;
        font-size: 13px;
        border-radius: 8px;
        width: 100%;
        outline: none;
    }

    .input-box i {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: #888;
        font-size: 16px;
    }

    .form-container {
        position: absolute;
        top: 0;
        height: 100%;
        transition: all 0.6s ease-in-out;
    }

    .sign-in {
        left: 0;
        width: 50%;
        z-index: 2;
    }

    .container.active .sign-in {
        transform: translateX(100%);
    }

    .sign-up {
        left: 0;
        width: 50%;
        opacity: 0;
        z-index: 1;
        transition: all 0.6s ease-in-out;
    }

    .container.active .sign-up {
        transform: translateX(100%);
        opacity: 1;
        z-index: 5;
        animation: move 0.6s;
    }

    @keyframes move {
        0%, 49.99% {
            opacity: 0;
            z-index: 1;
        }
        50%, 100% {
            opacity: 1;
            z-index: 5;
        }
    }

    .social-icons {
        margin: 20px 0;
    }

    .social-icons a {
        border: 1px solid #ccc;
        border-radius: 20%;
        display: inline-flex;
        justify-content: center;
        align-items: center;
        margin: 0 3px;
        width: 40px;
        height: 40px;
    }

    .toggle-container {
        position: absolute;
        top: 0;
        left: 50%;
        width: 50%;
        height: 100%;
        overflow: hidden;
        transition: all 0.6s ease-in-out;
        border-radius: 150px 0 0 100px;
        z-index: 1000;
    }

    .container.active .toggle-container {
        transform: translateX(-100%);
        border-radius: 0 150px 100px 0;
    }

    .toggle {
        background-color: #512da8;
        height: 100%;
        background: linear-gradient(to right, #5c6bc0, #512da8);
        color: #fff;
        position: relative;
        left: -100%;
        height: 100%;
        width: 200%;
        transform: translateX(0);
        transition: all 0.6s ease-in-out;
    }

    .container.active .toggle {
        transform: translateX(50%);
    }

    .toggle-panel {
        position: absolute;
        width: 50%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        padding: 0 30px;
        text-align: center;
        top: 0;
        transform: translateX(0);
        transition: all 0.6s ease-in-out;
    }

    .toggle-left {
        transform: translateX(-200%);
    }

    .container.active .toggle-left {
        transform: translateX(0);
    }

    .toggle-right {
        right: 0;
        transform: translateX(0);
    }

    .container.active .toggle-right {
        transform: translateX(200%);
    }

    .input-box .toggle-password {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: #888;
        cursor: pointer;
    }

    .role-buttons {
        display: flex;
        justify-content: center;
        gap: 10px;
        margin-top: 10px;
    }

    .role-buttons button {
        flex: 1;
        padding: 10px 20px;
        font-size: 14px;
        border-radius: 8px;
        background-color: #512da8;
        color: white;
        border: none;
        cursor: pointer;
        transition: background 0.3s ease-in-out;
    }

    .role-buttons button:hover {
        background-color: #5c6bc0;
    }
</style>

<body>
    <div class="container" id="container">
        <div class="form-container sign-up">
            <form>
                <h1>Registration</h1>
                <h2>Select Your Role:</h2>
                <div class="role-buttons">
                    <button type="button" id="Cus-btn">Customer</button>
                    <button type="button" id="sell-btn">Seller</button>
                    <button type="button" id="work-btn">Worker</button>
                </div>
            </form>
        </div>

        <div class="form-container sign-in">
            <form id="login-form">
                <h1>Login</h1>
                <div class="input-box">
                    <input type="text" id="login-email" placeholder="Email or Phone Number" required>
                    <i class='bx bx-user'></i>
                </div>
                <div class="input-box">
                    <input type="password" id="login-password" placeholder="Password" required>
                    <i class='bx bx-lock-alt'></i>
                </div>
                <a href="/forget">Forgot Your Password?</a>
                <button type="submit">Sign In</button>
                <div class="social-icons">
                    <a href="#" class="icon"><i class="fa-brands fa-google-plus-g"></i></a>
                    <a href="#" class="icon"><i class="fa-brands fa-facebook-f"></i></a>
                </div>
                <p id="error-message" style="color: red; display: none;"></p>
            </form>
        </div>

        <div class="toggle-container">
            <div class="toggle">
                <div class="toggle-panel toggle-left">
                    <h1>Welcome Back!</h1>
                    <p>Already have an account?</p>
                    <button class="hidden" id="login">Login</button>
                </div>
                <div class="toggle-panel toggle-right">
                    <h1>Hello, Friend!</h1>
                    <p>Don't have an account? Register now.</p>
                    <button class="hidden" id="register">Register</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        const container = document.getElementById('container');
        const registerBtn = document.getElementById('register');
        const loginBtn = document.getElementById('login');

        // Toggle between login and register panels
        registerBtn.addEventListener('click', () => {
            container.classList.add("active");
        });

        loginBtn.addEventListener('click', () => {
            container.classList.remove("active");
        });

        // Role button redirects
        document.getElementById('Cus-btn').addEventListener('click', () => {
            window.location.href = "/Cus_signup";
        });

        document.getElementById('sell-btn').addEventListener('click', () => {
            window.location.href = "/Sellers_page";
        });

        document.getElementById('work-btn').addEventListener('click', () => {
            window.location.href = "/Workers_signup";
        });

        // Login form submission
        document.getElementById('login-form').addEventListener('submit', async (e) => {
            e.preventDefault();

            const emailOrPhone = document.getElementById('login-email').value.trim();
            const password = document.getElementById('login-password').value.trim();
            const errorMessage = document.getElementById('error-message');

            // Basic client-side validation
            if (!emailOrPhone || !password) {
                errorMessage.style.display = 'block';
                errorMessage.textContent = 'Please fill in all fields';
                return;
            }

            try {
                const response = await fetch('/login', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ emailOrPhone, password }),
                });

                const data = await response.json();
                if (response.ok && data.success) {
                    console.log('Login successful, role:', data.role);
                    localStorage.setItem('isLoggedIn', 'true');
                    localStorage.setItem('userProfile', JSON.stringify(data.user));

                    // Redirect based on role
                    switch (data.role) {
                        case 'customer':
                            window.location.href = '/customer_dashboard';
                            break;
                        case 'seller':
                            window.location.href = '/seller_dashboard';
                            break;
                        case 'worker':
                            window.location.href = '/worker_dashboard';
                            break;
                        case 'admin':
                            window.location.href = '/admin_dashboard';
                            break;
                        default:
                            errorMessage.style.display = 'block';
                            errorMessage.textContent = 'Unknown role: ' + data.role;
                    }
                } else {
                    errorMessage.style.display = 'block';
                    errorMessage.textContent = data.error || 'Login failed';
                }
            } catch (error) {
                console.error('Fetch error:', error);
                errorMessage.style.display = 'block';
                errorMessage.textContent = 'Network error: Unable to connect to the server.';
            }
        });
    </script>
</body>
</html>