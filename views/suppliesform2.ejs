<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Request Supplies - SkillLink</title>
    <link rel="stylesheet" href="/css/navstyle.css">
    <link rel="stylesheet" href="/css/footstyle.css">
    <style>
        /* Existing Styling (Unchanged) */
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #e0f7fa, #b2ebf2);
            margin: 0;
            padding: 0;
            color: #333;
            overflow-x: hidden;
        }
        .supply-form-page {
            display: flex;
            max-width: 1200px;
            margin: 40px auto;
            gap: 30px;
            padding: 25px;
            background: #fff;
            border-radius: 15px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
            animation: fadeIn 0.5s ease-in;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .supply-left, .supply-right {
            flex: 1;
            padding: 25px;
        }
        .supply-left {
            border-right: 2px dashed #e0e0e0;
        }
        h2, h3 {
            color: #1a237e;
            margin-bottom: 25px;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        .supply-category label {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 15px;
            display: block;
            color: #d81b60;
        }
        .supply-category-group {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 12px;
        }
        .category-item {
            font-size: 15px;
            color: #fff;
            background: linear-gradient(45deg, #0288d1, #4fc3f7);
            padding: 12px 15px;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            text-align: center;
        }
        .category-item:hover {
            transform: scale(1.05);
            background: linear-gradient(45deg, #000203, #29b6f6);
        }
        .category-item.active {
            background: linear-gradient(45deg, #fc4b37, #fc6132);
            color: #fff;
            box-shadow: 0 4px 10px rgba(216, 27, 96, 0.3);
        }
        .supply-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            margin-top: 25px;
            background: #f7f9fc;
            border-radius: 12px;
            overflow: hidden;
            border: 3px solid #37474f;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        .supply-table th, .supply-table td {
            padding: 20px;
            text-align: left;
            border-bottom: 2px solid #cfd8dc;
            font-size: 16px;
            font-weight: 500;
        }
        .supply-table th {
            background: linear-gradient(45deg, #455a64, #607d8b);
            color: #fff;
            font-weight: 700;
            text-transform: uppercase;
            border-bottom: 3px solid #37474f;
        }
        .supply-table td {
            background: #fff;
            color: #263238;
        }
        .supply-table td input[type="text"],
        .supply-table td input[type="number"] {
            width: 100%;
            padding: 12px;
            border: 2px solid #90a4ae;
            border-radius: 6px;
            font-size: 16px;
            background: #fafafa;
            font-weight: 500;
            color: #263238;
        }
        .unit-controls {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        .unit-controls button {
            padding: 8px 15px;
            background: #607d8b;
            color: #fff;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: background 0.3s;
            font-size: 16px;
            font-weight: 600;
        }
        .unit-controls button:hover {
            background: #546e7a;
        }
        .remove-btn {
            padding: 8px 15px;
            background: #ef5350;
            color: #fff;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: background 0.3s;
            font-size: 16px;
            font-weight: 600;
        }
        .remove-btn:hover {
            background: #e53935;
        }
        .additional-supplies {
            margin-top: 25px;
        }
        .additional-supplies textarea {
            width: 100%;
            padding: 12px;
            border: 1px solid #b0bec5;
            border-radius: 5px;
            font-size: 14px;
            resize: vertical;
            background: #fff;
            box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);
        }
        #supply-submit-btn {
            margin-top: 25px;
            padding: 14px 30px;
            background: linear-gradient(45deg, #00c853, #4caf50);
            color: #fff;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 3px 8px rgba(0, 200, 83, 0.3);
        }
        #supply-submit-btn:hover {
            background: linear-gradient(45deg, #00e676, #66bb6a);
            transform: translateY(-2px);
            box-shadow: 0 5px 12px rgba(0, 200, 83, 0.4);
        }
        .supply-right {
            background: #e8f5e9;
            border-radius: 10px;
            box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.05);
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            min-height: 100%;
        }
        .supply-overlay {
            padding: 35px;
            background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url('https://img1.wsimg.com/isteam/ip/3765a738-a25c-44d6-8aba-b2692c104295/IMG_2566.jpg/:/cr=t:0%25,l:0%25,w:100%25,h:100%25/rs=w:600,h:800,cg:true~z');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            border-radius: 10px;
            color: #fff;
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.7);
            animation: slideIn 0.5s ease-in;
            flex-grow: 0;
            border: 2px solid #81c784;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            min-height: 350px;
        }
        @keyframes slideIn {
            from { opacity: 0; transform: translateX(20px); }
            to { opacity: 1; transform: translateX(0); }
        }
        .supply-overlay h3 {
            font-size: 26px;
            margin-bottom: 25px;
            text-align: center;
            color: #ffca28;
            text-transform: uppercase;
            letter-spacing: 1.5px;
        }
        .supply-overlay p {
            font-size: 17px;
            line-height: 1.8;
            margin: 15px 0;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        .supply-overlay p::before {
            content: 'ðŸ”¹';
            font-size: 20px;
        }
        .supply-overlay p strong {
            color: #ffca28;
            font-weight: 600;
        }
        .category-images {
            padding: 25px;
            flex-grow: 1;
        }
        .category-images h3 {
            font-size: 20px;
            text-align: center;
            color: #1a237e;
        }
        .category-images img {
            width: 110px;
            height: 110px;
            object-fit: cover;
            border-radius: 8px;
            margin: 12px;
            cursor: pointer;
            border: 3px solid #fff;
            transition: all 0.3s ease;
            box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1);
        }
        .category-images img:hover {
            border-color: #ff5722;
            transform: scale(1.1);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }
        #image-gallery {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            justify-content: center;
        }
        /* New Inline CSS for Seller Response Mode */
        .price-input {
            width: 100%;
            padding: 12px;
            border: 2px solid #90a4ae;
            border-radius: 6px;
            font-size: 16px;
            background: #fafafa;
            font-weight: 500;
            color: #263238;
        }
    </style>
</head>
<body>
<%- include("partials/navbar") %>
    <header>
        <div id="navbar"></div>
    </header>
    <div class="supply-form-page">
        <!-- Left Section: Form -->
        <div class="supply-left">
            <h2><%= requestId ? 'Respond to Supply Request' : 'Request Supplies' %></h2>

            <!-- Category Selection (Disabled for Seller Response Mode) -->
            <div class="supply-category">
                <label>Select a Category:</label>
                <div class="supply-category-group">
                    <div class="category-item" data-category="Electrical" <%= requestId ? 'style="pointer-events: none; opacity: 0.6;"' : '' %>>Electrical</div>
                    <div class="category-item" data-category="Plumbing" <%= requestId ? 'style="pointer-events: none; opacity: 0.6;"' : '' %>>Plumbing</div>
                </div>
            </div>

            <!-- Product Entry Section -->
            <div id="supply-product-container">
                <table class="supply-table">
                    <thead>
                        <tr>
                            <th>S.No</th>
                            <th>Part Name</th>
                            <th>No. of Pieces</th>
                            <%= requestId ? '<th>Price per Unit (â‚¹)</th>' : '' %>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="supply-table-body">
                        <% if (requestId && requestData) { %>
                            <% requestData.supplies.forEach((item, index) => { %>
                                <tr>
                                    <td><%= index + 1 %></td>
                                    <td><input type="text" value="<%= item.partName %>" readonly></td>
                                    <td><input type="number" value="<%= item.units %>" readonly></td>
                                    <td><input type="number" class="price-input" min="1" placeholder="Enter price" required></td>
                                    <td></td>
                                </tr>
                            <% }) %>
                        <% } %>
                    </tbody>
                </table>
            </div>

            <!-- Additional Supplies Section (Hidden for Seller Response Mode) -->
            <% if (!requestId) { %>
                <div class="additional-supplies">
                    <h3>Specify Additional Supplies</h3>
                    <textarea id="additional-supplies-text" rows="4" placeholder="Need something extra? Let us know here!"></textarea>
                </div>
            <% } %>

            <!-- Submit Button -->
            <button id="supply-submit-btn"><%= requestId ? 'Submit Response' : 'Search Prices Now!' %></button>
        </div>

        <!-- Right Section: How It Works / Category Images -->
        <div class="supply-right" id="supply-right">
            <div class="supply-overlay" id="how-it-works" <%= requestId ? 'style="display: none;"' : '' %>>
                <h3>How It Works</h3>
                <p><strong>Pick Your Category</strong> with a simple click!</p>
                <p><strong>Grab Your Parts</strong> from our vibrant gallery.</p>
                <p><strong>Set Quantities</strong> to match your needs.</p>
                <p>Hit <strong>"Search Prices"</strong> and watch the magic happen!</p>
            </div>
            <div class="category-images" id="category-images" <%= requestId ? 'style="display: none;"' : 'style="display: none;"' %>>
                <h3>Available Parts</h3>
                <div id="image-gallery">
                    <!-- Images will be populated dynamically -->
                </div>
            </div>
            <!-- New Seller Info Section for Response Mode -->
            <% if (requestId) { %>
                <div id="seller-info" style="padding: 25px; flex-grow: 1;">
                    <h3 style="font-size: 20px; text-align: center; color: #1a237e;">Your Response</h3>
                    <p style="font-size: 16px; color: #555; line-height: 1.6;">Provide your prices for the requested items above. Ensure your pricing is competitive to win the customerâ€™s order!</p>
                </div>
            <% } %>
        </div>
    </div>

    <footer>
        <div id="footer"></div>
    </footer>
<%- include("partials/footer") %>

    <!-- JavaScript for Dynamic Functionality -->
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const categoryItems = document.querySelectorAll('.category-item');
            const tableBody = document.getElementById('supply-table-body');
            const howItWorks = document.getElementById('how-it-works');
            const categoryImages = document.getElementById('category-images');
            const imageGallery = document.getElementById('image-gallery');
            const submitBtn = document.getElementById('supply-submit-btn');
            const isSellerResponseMode = <%= requestId ? 'true' : 'false' %>;
    
            // Category images (replace with actual URLs)
             // Category images (replace with actual URLs)
             const categoryData = {
    'Electrical': [
        { name: 'Wire Bundle', src: 'https://tse3.mm.bing.net/th?id=OIP.BqcXNLZaAUF-mMLEACVAEQHaE8&pid=Api&P=0&h=180' },
        { name: 'Circuit Breaker', src: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQRfBTMsoRmq2N27VvEjwGd2IUE0ztInI8XTA&s' },
        { name: 'Light Switch', src: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSBCuNpvIzi_lwfgOLbdUfYto44zhrX3pPXwQ&s' },
        { name: 'Electrical Outlet', src: 'https://rukminim2.flixcart.com/image/850/1000/kw6pw280/electrical-socket/1/l/t/2-1a-2-usb-multi-plug-socket-switch-control-wall-socket-with-original-imag8xffffjtb29q.jpeg?q=90&crop=false' },
        { name: 'LED Bulb', src: 'https://tse2.mm.bing.net/th?id=OIP.NGSyM-UVsY-OzS1zywGMKAHaHl&pid=Api&P=0&h=180' },
        { name: 'Fuse Box', src: 'https://tse1.mm.bing.net/th?id=OIP.Xo9Db_cCICbYsqI-xmhU-AHaFW&pid=Api&P=0&h=180' },
        { name: 'Power Strip', src: 'https://tse1.mm.bing.net/th?id=OIP.s-anybKpsvFaMF_lcaemhAHaHW&pid=Api&P=0&h=180' },
        { name: 'Ceiling Fan', src: 'https://tse4.mm.bing.net/th?id=OIP.TpsUSbO_sxlhlLqhngpgGAHaHa&pid=Api&P=0&h=180' },
        { name: 'Wall Socket', src: 'https://tse4.mm.bing.net/th?id=OIP.NV-kYmD5lFEtTj_UziiXuwHaFJ&pid=Api&P=0&h=180' }
    ],
    'Plumbing': [
        { name: 'PVC Pipe', src: 'https://tse2.mm.bing.net/th?id=OIP.iV2qgHtTdyJRllVwLsF_cQHaHa&pid=Api&P=0&h=180' },
        { name: 'Faucet', src: 'https://tse2.mm.bing.net/th?id=OIP.u7_M8iM49X9k2cPL6UFdqwHaJ3&pid=Api&P=0&h=180' },
        { name: 'Pipe Fitting', src: 'https://tse3.mm.bing.net/th?id=OIP.qzb1QPJG8b9YKed0Me_uPAHaFv&pid=Api&P=0&h=180' },
        { name: 'Water Valve', src: 'https://tse4.mm.bing.net/th?id=OIP.EnbYsr-BhxxP1Vit_aJX6AHaHa&pid=Api&P=0&h=180' },
        { name: 'Drain Trap', src: 'https://tse1.mm.bing.net/th?id=OIP.-wLBrbvpoZDEvInDeaSUOQHaE7&pid=Api&P=0&h=180' },
        { name: 'Shower Head', src: 'https://tse3.mm.bing.net/th?id=OIP.HM7a-8DgxPGde8j4SDb4QwHaHa&pid=Api&P=0&h=180' },
        { name: 'Sink Cartridge', src: 'https://tse1.mm.bing.net/th?id=OIP.mbwgoaoMysgfZWLmv7TG-QHaHa&pid=Api&P=0&h=180' },
        { name: 'Toilet Flapper', src: 'https://tse3.mm.bing.net/th?id=OIP.rvQhGpHo7BEgYMrfQuDz_AHaH7&pid=Api&P=0&h=180' },
        { name: 'Copper Tube', src: 'https://tse3.mm.bing.net/th?id=OIP.KNr7sh6q3WiTu0PWRttzXgHaHa&pid=Api&P=0&h=180' }
    ]
};

            let selectedCategory = null;
    
            // Ensure category buttons are functional in customer mode
            if (!isSellerResponseMode) {
                categoryItems.forEach(item => {
                    // Remove any inline styles that might disable the buttons
                    item.style.pointerEvents = 'auto';
                    item.style.opacity = '1';
    
                    item.addEventListener('click', () => {
                        // Remove 'active' class from all items
                        categoryItems.forEach(i => i.classList.remove('active'));
                        // Add 'active' class to clicked item
                        item.classList.add('active');
                        // Update selectedCategory
                        selectedCategory = item.dataset.category;
                        // Show images for the selected category
                        showCategoryImages(selectedCategory);
                        // Toggle visibility of sections
                        howItWorks.style.display = 'none';
                        categoryImages.style.display = 'block';
                    });
                });
            }
    
            function showCategoryImages(category) {
                imageGallery.innerHTML = ''; // Clear previous images
                const items = categoryData[category] || [];
                if (items.length === 0) {
                    imageGallery.innerHTML = '<p>No items available for this category.</p>';
                    return;
                }
                items.forEach(item => {
                    const img = document.createElement('img');
                    img.src = item.src;
                    img.alt = item.name;
                    img.title = item.name;
                    img.addEventListener('click', () => updateOrAddToTable(item.name));
                    imageGallery.appendChild(img);
                });
            }
    
            function updateOrAddToTable(partName) {
                const existingRow = Array.from(tableBody.querySelectorAll('tr')).find(row => 
                    row.querySelector('input[type="text"]').value === partName
                );
    
                if (existingRow) {
                    const unitInput = existingRow.querySelector('.unit-input');
                    unitInput.value = parseInt(unitInput.value) + 1;
                } else {
                    const rowCount = tableBody.children.length + 1;
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${rowCount}</td>
                        <td><input type="text" value="${partName}" readonly></td>
                        <td>
                            <div class="unit-controls">
                                <input type="number" min="1" value="1" class="unit-input">
                                <button class="increase">+</button>
                                <button class="decrease">-</button>
                            </div>
                        </td>
                        <td><button class="remove-btn">Remove</button></td>
                    `;
                    tableBody.appendChild(row);
    
                    const increaseBtn = row.querySelector('.increase');
                    const decreaseBtn = row.querySelector('.decrease');
                    const unitInput = row.querySelector('.unit-input');
                    const removeBtn = row.querySelector('.remove-btn');
    
                    increaseBtn.addEventListener('click', () => {
                        unitInput.value = parseInt(unitInput.value) + 1;
                    });
    
                    decreaseBtn.addEventListener('click', () => {
                        if (parseInt(unitInput.value) > 1) {
                            unitInput.value = parseInt(unitInput.value) - 1;
                        }
                    });
    
                    removeBtn.addEventListener('click', () => {
                        row.remove();
                        updateSerialNumbers();
                    });
                }
            }
    
            function updateSerialNumbers() {
                const rows = tableBody.children;
                Array.from(rows).forEach((row, index) => {
                    row.querySelector('td:first-child').textContent = index + 1;
                });
            }
    
            submitBtn.addEventListener('click', async () => {
    const formData = {
        category: selectedCategory,
        supplies: Array.from(tableBody.querySelectorAll('tr')).map(row => ({
            partName: row.querySelector('input[type="text"]').value,
            units: parseInt(row.querySelector('.unit-input').value)
        })),
        additional: document.getElementById('additional-supplies-text')?.value || ''
    };

    if (!isSellerResponseMode && (!formData.category || formData.supplies.length === 0)) {
        alert('Please select a category and add at least one item.');
        return;
    }

    try {
        const response = await fetch('/submit-suppliesform2', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(formData),
            credentials: 'include'
        });

        if (!response.ok) {
            const errorText = await response.text();
            console.error('Server response error:', response.status, errorText);
            throw new Error(`Server responded with status ${response.status}: ${errorText}`);
        }

        const data = await response.json();
        console.log('Server response:', data); // Debug the response

        if (data.success) {
            window.location.href = data.redirect;
        } else {
            alert('Error: ' + data.error);
        }
    } catch (err) {
        console.error('Error submitting request:', err);
        alert('An error occurred: ' + err.message);
    }
});
        });
    </script>
</body>
</html>